--> Customer

create table if not exists CUSTOMER (
  Cust_id integer primary key,
  Cust_name varchar(30),
  City varchar(30),
  Address Varchar(30),
  Phone numeric(10),
  Email varchar(30) )

  --> Shop

  create table if not exists SHOP (
  Shop_id integer primary key,
  Shop_name varchar(30),
  Shop_loc varchar(30),
  Phone numeric(10),
  Email varchar(30) )

  --> Review

  create table if not EXISTS REVIEW (
  Review_id INteger Primary key,
  Cust_id Integer,
  Ratings Integer,
  Comments varchar(100),
  FOREIGN key (Cust_id) REFERENCES CUSTOMER (Cust_id) ON DELETE CASCADE CASCADE
)

--> Products

create table if not EXISTS PRODUCTS (
	Product_id integer Primary key,
    Product_name varchar(30),
    Price smallmoney,
    Stocks integer,
    Type varchar(30),
    Review_id integer,
    Brand varchar(30),
    FOREIGN KEY (Review_id) REFERENCES REVIEW (Review_id) ON DELETE CASCADE
)

--> Orders

create table if not exists ORDERS (
  Order_id integer PRIMARY key,
  Cust_id integer,
  Shop_id integer,
  Product_id integer,
  Order_date date,
  FOREIGN key (Cust_id) REFERENCES CUSTOMER (Cust_id) on delete CASCADE,
  FOREIGN key (Shop_id) REFERENCES SHOP (Shop_id) on DELETE CASCADE,
  FOREIGN key (Product_id) REFERENCES PRODUCTS (Product_id) on DELETE cascade
)

--> Visits

create table if not EXISTS VISITS (
  Cust_id integer,
  Shop_id integer,
  primary key (Cust_id , Shop_id),
  foreign key (Cust_id) REFERENCES CUSTOMER (Cust_id) on delete cascade,
  foreign key (Shop_id) REFERENCES SHOP (Shop_id) on DELETE CASCADE
)

--> Contains

create table if not EXISTS CONTAINS (
  Product_id integer,
  Order_id integer,
  primary key (Product_id , Order_id),
  foreign key (Product_id) REFERENCES PRODUCTS (Product_id) on delete cascade,
  foreign key (Order_id) REFERENCES ORDERS (Order_id) on DELETE CASCADE
)

--> Read_review

create table if not EXISTS READ_REVIEW (
  Review_id integer,
  Order_id integer,
  primary key (Review_id , Order_id),
  foreign key (Review_id) REFERENCES REVIEW (Review_id) on delete cascade,
  foreign key (Order_id) REFERENCES ORDERS (Order_id) on DELETE CASCADE
)
